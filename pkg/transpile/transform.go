package transpile

import (
	"bytes"
	"go/ast"
	"go/parser"
	"go/printer"
	"go/token"

	"golang.org/x/tools/go/ast/astutil"
)

func Transform(filepath string, input any) (output bytes.Buffer, err4file bool, err error) {
	fset := token.NewFileSet()
	f, err := parser.ParseFile(fset, filepath, input, parser.ParseComments)
	if err != nil {
		return
	}

	hit := 0
	astutil.Apply(f, nil, func(c *astutil.Cursor) bool {
		n := c.Node()
		switch x := n.(type) {
		case *ast.AssignStmt:
			if changed := ChangeErr4AssignStmt(x, c); changed {
				hit++
			}
		}
		return true
	})

	err4file = RepalceErr4BuildTag(f)
	if err4file {
		c := &ast.Comment{Slash: 1, Text: "// Code generated by github.com/shynome/err4 DO NOT EDIT"}
		f.Comments[0].List = append(f.Comments[0].List, c)
	}
	if hit > 0 {
		astutil.AddImport(fset, f, "github.com/shynome/err4")
	}

	if err = printer.Fprint(&output, fset, f); err != nil {
		return
	}
	return
}
